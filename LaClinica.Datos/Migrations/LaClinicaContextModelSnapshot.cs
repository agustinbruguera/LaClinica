// <auto-generated />
using System;
using LaClinica.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LaClinica.Datos.Migrations
{
    [DbContext(typeof(LaClinicaContext))]
    partial class LaClinicaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LaClinica.Dominio.Llamada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Hora")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperadorId")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("RecursoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperadorId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("RecursoId");

                    b.ToTable("Llamadas");
                });

            modelBuilder.Entity("LaClinica.Dominio.LlamadaSintoma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LlamadaId")
                        .HasColumnType("int");

                    b.Property<int>("SintomaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LlamadaId");

                    b.HasIndex("SintomaId");

                    b.ToTable("LlamadaSintomas");
                });

            modelBuilder.Entity("LaClinica.Dominio.Nivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Niveles");
                });

            modelBuilder.Entity("LaClinica.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<string>("Domicilio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("LaClinica.Dominio.Recurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Recursos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Recurso");
                });

            modelBuilder.Entity("LaClinica.Dominio.Sintoma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NivelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NivelId");

                    b.ToTable("Sintomas");
                });

            modelBuilder.Entity("LaClinica.Dominio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");
                });

            modelBuilder.Entity("LaClinica.Dominio.Ambulancia", b =>
                {
                    b.HasBaseType("LaClinica.Dominio.Recurso");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Ambulancia");
                });

            modelBuilder.Entity("LaClinica.Dominio.Medico", b =>
                {
                    b.HasBaseType("LaClinica.Dominio.Recurso");

                    b.Property<int?>("Legajo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Medico");
                });

            modelBuilder.Entity("LaClinica.Dominio.Turno", b =>
                {
                    b.HasBaseType("LaClinica.Dominio.Recurso");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Hora")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Telefono")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Turno");
                });

            modelBuilder.Entity("LaClinica.Dominio.Operador", b =>
                {
                    b.HasBaseType("LaClinica.Dominio.Usuario");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Legajo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Operador");
                });

            modelBuilder.Entity("LaClinica.Dominio.Llamada", b =>
                {
                    b.HasOne("LaClinica.Dominio.Operador", "Operador")
                        .WithMany()
                        .HasForeignKey("OperadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaClinica.Dominio.Persona", "Persona")
                        .WithMany("Llamadas")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaClinica.Dominio.Recurso", "Recurso")
                        .WithMany()
                        .HasForeignKey("RecursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operador");

                    b.Navigation("Persona");

                    b.Navigation("Recurso");
                });

            modelBuilder.Entity("LaClinica.Dominio.LlamadaSintoma", b =>
                {
                    b.HasOne("LaClinica.Dominio.Llamada", "Llamada")
                        .WithMany("Sintomas")
                        .HasForeignKey("LlamadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaClinica.Dominio.Sintoma", "Sintoma")
                        .WithMany("Llamadas")
                        .HasForeignKey("SintomaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Llamada");

                    b.Navigation("Sintoma");
                });

            modelBuilder.Entity("LaClinica.Dominio.Sintoma", b =>
                {
                    b.HasOne("LaClinica.Dominio.Nivel", "Nivel")
                        .WithMany()
                        .HasForeignKey("NivelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nivel");
                });

            modelBuilder.Entity("LaClinica.Dominio.Llamada", b =>
                {
                    b.Navigation("Sintomas");
                });

            modelBuilder.Entity("LaClinica.Dominio.Persona", b =>
                {
                    b.Navigation("Llamadas");
                });

            modelBuilder.Entity("LaClinica.Dominio.Sintoma", b =>
                {
                    b.Navigation("Llamadas");
                });
#pragma warning restore 612, 618
        }
    }
}
